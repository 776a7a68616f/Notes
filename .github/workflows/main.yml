name: Main
on:
  push:
    branches:
      - "develop"
      - "feature/update**"
      - "feature/server_esm**"
    paths-ignore:
      - "docs/**"
      - "bin/**"
  workflow_dispatch:    

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_darwin:
    name: Build macOS (x86_64, arm64)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up node & dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - name: Run installer build (x86_64)
      - run: |
          npm run update-build-info
          npm run make-electron -- --arch="x64"
      - name: Publish zip artifact (x86_64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for MacOS (x86_64)
          path: out/make/zip/darwin/x64/*.zip
      - name: Publish installer artifact (x86_64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for MacOS (Setup) (x86_64)
          path: out/make/*-x64.dmg
      - name: Run installer build (arm64)
      - run: |
          npm run update-build-info
          npm run make-electron -- --arch="arm64"
      - name: Publish zip artifact (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for MacOS (arm64)
          path: out/make/zip/darwin/arm64/*.zip
      - name: Publish installer artifact (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for MacOS (Setup) (arm64)
          path: out/make/*-arm64.dmg  
  build_linux:
    name: Build Linux (x86_64, arm64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up node & dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - name: Run installer build (x86_64)
        run: |
          npm run update-build-info
          npm run make-electron -- --arch="x64"
      - name: Publish zip artifact (x86_64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for Linux
          path: out/make/zip/linux/x64/*.zip
      - name: Publish installer artifact (x86_64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for Linux (Setup)
          path: out/make/deb/x64/*.deb
      - name: Run installer build (arm64)
        run: |
          npm run update-build-info
          npm run make-electron -- --arch="arm64"
      - name: Publish zip artifact (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for Linux
          path: out/make/zip/linux/arm64/*.zip
      - name: Publish installer artifact (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for Linux (Setup)
          path: out/make/deb/arm64/*.deb
  build_linux_server-x64:
    name: Build Linux Server x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up node & dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - run: |
          npm run update-build-info
          ./bin/build-server.sh
      - uses: actions/upload-artifact@v4
        with:
          name: trilium-linux-x64-server.tar.xz
          path: dist/trilium-linux-x64-server-*.tar.xz
  build_windows:
    name: Build Windows x86_64
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up node & dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - name: Run installer build
        run: |
          npm run update-build-info
          npm run make-electron
      - name: Publish zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for Windows
          path: out/make/zip/win32/x64/*.zip
      - name: Publish installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: TriliumNext Notes for Windows (Setup)
          path: out/make/squirrel.windows/x64/*.exe
  build_docker:
    name: Build Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for GHCR image
        id: ghcr-meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Extract metadata (tags, labels) for DockerHub image
        id: dh-meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up node & dependencies
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - name: Run the TypeScript build
        run: npx tsc
      - name: Create server-package.json
        run: cat package.json | grep -v electron > server-package.json
      - name: Log in to the GHCR container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - name: Build and push container image to GHCR
        uses: docker/build-push-action@v6
        id: ghcr-push
        with:
          context: .
          push: true
          tags: ${{ steps.ghcr-meta.outputs.tags }}
          labels: ${{ steps.ghcr-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate and push artifact attestation to GHCR
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.ghcr-push.outputs.digest }}
          push-to-registry: true
      - name: Log in to the DockerHub container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.DOCKERHUB_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image to DockerHub
        uses: docker/build-push-action@v6
        id: dh-push
        with:
          context: .
          push: true
          tags: ${{ steps.dh-meta.outputs.tags }}
          labels: ${{ steps.dh-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate and push artifact attestation to DockerHub
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.dh-push.outputs.digest }}
          push-to-registry: true
